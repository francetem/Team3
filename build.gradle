apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

sourceCompatibility = 1.8
version = '1.0'

mainClassName = "netflix.karyon.KaryonRunner"
applicationDefaultJvmArgs = ["-Djava.awt.headless=true",
                             "-Darchaius.deployment.environment=dev",
                             "-Darchaius.deployment.applicationId=GotQuotes"]

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
        attributes 'Main-Class': 'com.netflix.karyon.KaryonRunner'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'io.reactivex:rxjava:1.0.12'
    compile 'com.google.inject:guice:3.0'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'com.netflix.karyon:karyon2-archaius:2.7.1'
    compile 'com.netflix.karyon:karyon2-admin-web:2.7.1'
    compile 'com.netflix.karyon:karyon2-eureka:2.7.1'
    compile 'com.netflix.karyon:karyon2-servo:2.7.1'
    compile 'com.scmspain.karyon:karyon-rest-router:1.1'
    compile 'com.netflix.blitz4j:blitz4j:1.36.0'

    compile 'org.slf4j:slf4j-api:1.7.0'
    runtime 'org.slf4j:slf4j-simple:1.7.0'

    testCompile "org.mockito:mockito-all:1.9.5"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task copyTar(dependsOn: distTar, type: Copy) {
    group = "distribution"
    from('build/distributions/') {
        include '**/*.tar'
        exclude '**/*.zip'
        rename "${applicationName}-${version}(.*)", "${applicationName}\$1"
    }
    into 'target/'
    includeEmptyDirs = false
}

task runApp (dependsOn: [classes], type: JavaExec) {

    group = "Examples"
    description = "Run simple service providing an API with quotes endpoint."

    if (System.getenv("CLOUD_EUREKA") == null)
        environment "CLOUD_EUREKA", "eureka.hackathon.schibsted.io"

    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    def deployEnvironment = 'dev'
    systemProperty 'java.awt.headless', 'true'
    systemProperty 'archaius.deployment.environment', deployEnvironment
    systemProperty 'archaius.deployment.applicationId', 'App'

    args = ["com.schibsted.hackathons.example.gotquotes.AppServer"]
}

task killGradleInstances(type: Exec) {
    commandLine './killGradle.sh'
}
